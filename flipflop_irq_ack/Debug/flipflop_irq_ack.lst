
Debug/flipflop_irq_ack:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
 * 	startup.c
 *
 */
__attribute__((naked)) __attribute__((section (".start_section")) )
void startup ( void ){
__asm__ volatile(" LDR R0,=0x2001C000\n");		/* set stack */
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <startup+0xc>)
__asm__ volatile(" MOV SP,R0\n");
20000002:	4685      	mov	sp, r0
__asm__ volatile(" BL main\n");					/* call main */
20000004:	f000 f8a0 	bl	20000148 <main>
__asm__ volatile(".L1: B .L1\n");				/* never return */
20000008:	e7fe      	b.n	20000008 <startup+0x8>
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <irq_handler>:
#define NVIC_ISER0 ((int *)(0xE000E100))
#define EXTI3_IRQ (0x2001C000 + 0x00000064)

static int count = 0; 

void irq_handler(void){
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
	*EXTI_PR |= (1<<3); //kvitterar avbrott
20000014:	4b25      	ldr	r3, [pc, #148]	; (200000ac <irq_handler+0x9c>)
20000016:	681a      	ldr	r2, [r3, #0]
20000018:	4b24      	ldr	r3, [pc, #144]	; (200000ac <irq_handler+0x9c>)
2000001a:	2108      	movs	r1, #8
2000001c:	430a      	orrs	r2, r1
2000001e:	601a      	str	r2, [r3, #0]
	if(*GPIO_E_IDR_LOW & 0x1){
20000020:	4b23      	ldr	r3, [pc, #140]	; (200000b0 <irq_handler+0xa0>)
20000022:	781b      	ldrb	r3, [r3, #0]
20000024:	b2db      	uxtb	r3, r3
20000026:	001a      	movs	r2, r3
20000028:	2301      	movs	r3, #1
2000002a:	4013      	ands	r3, r2
2000002c:	d00d      	beq.n	2000004a <irq_handler+0x3a>
		*GPIO_E_IDR_LOW |= (1<<4);
2000002e:	4b20      	ldr	r3, [pc, #128]	; (200000b0 <irq_handler+0xa0>)
20000030:	781b      	ldrb	r3, [r3, #0]
20000032:	b2db      	uxtb	r3, r3
20000034:	4a1e      	ldr	r2, [pc, #120]	; (200000b0 <irq_handler+0xa0>)
20000036:	2110      	movs	r1, #16
20000038:	430b      	orrs	r3, r1
2000003a:	b2db      	uxtb	r3, r3
2000003c:	7013      	strb	r3, [r2, #0]
		count++;
2000003e:	4b1d      	ldr	r3, [pc, #116]	; (200000b4 <irq_handler+0xa4>)
20000040:	681b      	ldr	r3, [r3, #0]
20000042:	1c5a      	adds	r2, r3, #1
20000044:	4b1b      	ldr	r3, [pc, #108]	; (200000b4 <irq_handler+0xa4>)
20000046:	601a      	str	r2, [r3, #0]
		}
	}
	else{
		*GPIO_D_ODR_LOW = 0xFF;
	}
}
20000048:	e02d      	b.n	200000a6 <irq_handler+0x96>
	else if(*GPIO_E_IDR_LOW & 0x2){
2000004a:	4b19      	ldr	r3, [pc, #100]	; (200000b0 <irq_handler+0xa0>)
2000004c:	781b      	ldrb	r3, [r3, #0]
2000004e:	b2db      	uxtb	r3, r3
20000050:	001a      	movs	r2, r3
20000052:	2302      	movs	r3, #2
20000054:	4013      	ands	r3, r2
20000056:	d00b      	beq.n	20000070 <irq_handler+0x60>
		*GPIO_E_IDR_LOW |= (1<<5);
20000058:	4b15      	ldr	r3, [pc, #84]	; (200000b0 <irq_handler+0xa0>)
2000005a:	781b      	ldrb	r3, [r3, #0]
2000005c:	b2db      	uxtb	r3, r3
2000005e:	4a14      	ldr	r2, [pc, #80]	; (200000b0 <irq_handler+0xa0>)
20000060:	2120      	movs	r1, #32
20000062:	430b      	orrs	r3, r1
20000064:	b2db      	uxtb	r3, r3
20000066:	7013      	strb	r3, [r2, #0]
		count = 0;
20000068:	4b12      	ldr	r3, [pc, #72]	; (200000b4 <irq_handler+0xa4>)
2000006a:	2200      	movs	r2, #0
2000006c:	601a      	str	r2, [r3, #0]
}
2000006e:	e01a      	b.n	200000a6 <irq_handler+0x96>
	else if(*GPIO_E_IDR_LOW & 0x4){
20000070:	4b0f      	ldr	r3, [pc, #60]	; (200000b0 <irq_handler+0xa0>)
20000072:	781b      	ldrb	r3, [r3, #0]
20000074:	b2db      	uxtb	r3, r3
20000076:	001a      	movs	r2, r3
20000078:	2304      	movs	r3, #4
2000007a:	4013      	ands	r3, r2
2000007c:	d010      	beq.n	200000a0 <irq_handler+0x90>
		*GPIO_E_IDR_LOW |= (1<<6);
2000007e:	4b0c      	ldr	r3, [pc, #48]	; (200000b0 <irq_handler+0xa0>)
20000080:	781b      	ldrb	r3, [r3, #0]
20000082:	b2db      	uxtb	r3, r3
20000084:	4a0a      	ldr	r2, [pc, #40]	; (200000b0 <irq_handler+0xa0>)
20000086:	2140      	movs	r1, #64	; 0x40
20000088:	430b      	orrs	r3, r1
2000008a:	b2db      	uxtb	r3, r3
2000008c:	7013      	strb	r3, [r2, #0]
		if(*GPIO_D_ODR_LOW){
2000008e:	4b0a      	ldr	r3, [pc, #40]	; (200000b8 <irq_handler+0xa8>)
20000090:	781b      	ldrb	r3, [r3, #0]
20000092:	b2db      	uxtb	r3, r3
20000094:	2b00      	cmp	r3, #0
20000096:	d006      	beq.n	200000a6 <irq_handler+0x96>
			*GPIO_D_ODR_LOW = 0;
20000098:	4b07      	ldr	r3, [pc, #28]	; (200000b8 <irq_handler+0xa8>)
2000009a:	2200      	movs	r2, #0
2000009c:	701a      	strb	r2, [r3, #0]
}
2000009e:	e002      	b.n	200000a6 <irq_handler+0x96>
		*GPIO_D_ODR_LOW = 0xFF;
200000a0:	4b05      	ldr	r3, [pc, #20]	; (200000b8 <irq_handler+0xa8>)
200000a2:	22ff      	movs	r2, #255	; 0xff
200000a4:	701a      	strb	r2, [r3, #0]
}
200000a6:	46c0      	nop			; (mov r8, r8)
200000a8:	46bd      	mov	sp, r7
200000aa:	bd80      	pop	{r7, pc}
200000ac:	40013c14 	andmi	r3, r1, r4, lsl ip
200000b0:	40021010 	andmi	r1, r2, r0, lsl r0
200000b4:	20000164 	andcs	r0, r0, r4, ror #2
200000b8:	40020c14 	andmi	r0, r2, r4, lsl ip

200000bc <app_init>:

void app_init(){
200000bc:	b580      	push	{r7, lr}
200000be:	af00      	add	r7, sp, #0
	*GPIO_D_MODER = 0x00005555;	//initierar PD0-7
200000c0:	4b17      	ldr	r3, [pc, #92]	; (20000120 <app_init+0x64>)
200000c2:	4a18      	ldr	r2, [pc, #96]	; (20000124 <app_init+0x68>)
200000c4:	601a      	str	r2, [r3, #0]
	*GPIO_E_MODER = 0x55555500;	
200000c6:	4b18      	ldr	r3, [pc, #96]	; (20000128 <app_init+0x6c>)
200000c8:	4a18      	ldr	r2, [pc, #96]	; (2000012c <app_init+0x70>)
200000ca:	601a      	str	r2, [r3, #0]
	
	
	*SYSCFG_EXTICR1 &= ~0xF000;  //nollställer bitfält för EXTI3 
200000cc:	4b18      	ldr	r3, [pc, #96]	; (20000130 <app_init+0x74>)
200000ce:	2200      	movs	r2, #0
200000d0:	5e9b      	ldrsh	r3, [r3, r2]
200000d2:	4a17      	ldr	r2, [pc, #92]	; (20000130 <app_init+0x74>)
200000d4:	051b      	lsls	r3, r3, #20
200000d6:	0d1b      	lsrs	r3, r3, #20
200000d8:	b21b      	sxth	r3, r3
200000da:	8013      	strh	r3, [r2, #0]
	*SYSCFG_EXTICR1 |= 0x4000;	//port E till  EXTI3
200000dc:	4b14      	ldr	r3, [pc, #80]	; (20000130 <app_init+0x74>)
200000de:	2200      	movs	r2, #0
200000e0:	5e9b      	ldrsh	r3, [r3, r2]
200000e2:	4913      	ldr	r1, [pc, #76]	; (20000130 <app_init+0x74>)
200000e4:	2280      	movs	r2, #128	; 0x80
200000e6:	01d2      	lsls	r2, r2, #7
200000e8:	4313      	orrs	r3, r2
200000ea:	b21b      	sxth	r3, r3
200000ec:	800b      	strh	r3, [r1, #0]
	
	*EXTI_IRM |= (1<<3);		//aktiverar avbrottslina 3
200000ee:	4b11      	ldr	r3, [pc, #68]	; (20000134 <app_init+0x78>)
200000f0:	681a      	ldr	r2, [r3, #0]
200000f2:	4b10      	ldr	r3, [pc, #64]	; (20000134 <app_init+0x78>)
200000f4:	2108      	movs	r1, #8
200000f6:	430a      	orrs	r2, r1
200000f8:	601a      	str	r2, [r3, #0]
	*EXTI_RTSR |= (1<<3);		//aktivera avbrott på positiv flank på avbrottslina 3
200000fa:	4b0f      	ldr	r3, [pc, #60]	; (20000138 <app_init+0x7c>)
200000fc:	681a      	ldr	r2, [r3, #0]
200000fe:	4b0e      	ldr	r3, [pc, #56]	; (20000138 <app_init+0x7c>)
20000100:	2108      	movs	r1, #8
20000102:	430a      	orrs	r2, r1
20000104:	601a      	str	r2, [r3, #0]
	
	*NVIC_ISER0 |= (1<<9);		//aktiverar avbrott från 
20000106:	4b0d      	ldr	r3, [pc, #52]	; (2000013c <app_init+0x80>)
20000108:	681a      	ldr	r2, [r3, #0]
2000010a:	4b0c      	ldr	r3, [pc, #48]	; (2000013c <app_init+0x80>)
2000010c:	2180      	movs	r1, #128	; 0x80
2000010e:	0089      	lsls	r1, r1, #2
20000110:	430a      	orrs	r2, r1
20000112:	601a      	str	r2, [r3, #0]
	*((void (**)(void)) EXTI3_IRQ) = irq_handler; //kopplar avbrottsrutin till EXTI3
20000114:	4b0a      	ldr	r3, [pc, #40]	; (20000140 <app_init+0x84>)
20000116:	4a0b      	ldr	r2, [pc, #44]	; (20000144 <app_init+0x88>)
20000118:	601a      	str	r2, [r3, #0]
}
2000011a:	46c0      	nop			; (mov r8, r8)
2000011c:	46bd      	mov	sp, r7
2000011e:	bd80      	pop	{r7, pc}
20000120:	40020c00 	andmi	r0, r2, r0, lsl #24
20000124:	00005555 	andeq	r5, r0, r5, asr r5
20000128:	40021000 	andmi	r1, r2, r0
2000012c:	55555500 	ldrbpl	r5, [r5, #-1280]	; 0xfffffb00
20000130:	40013808 	andmi	r3, r1, r8, lsl #16
20000134:	40013c00 	andmi	r3, r1, r0, lsl #24
20000138:	40013c08 	andmi	r3, r1, r8, lsl #24
2000013c:	e000e100 	and	lr, r0, r0, lsl #2
20000140:	2001c064 	andcs	ip, r1, r4, rrx
20000144:	20000011 	andcs	r0, r0, r1, lsl r0

20000148 <main>:

void main(void){
20000148:	b580      	push	{r7, lr}
2000014a:	af00      	add	r7, sp, #0
	app_init();
2000014c:	f7ff ffb6 	bl	200000bc <app_init>
	int bit;
	while(1){
		*GPIO_D_ODR_LOW = count; 
20000150:	4b02      	ldr	r3, [pc, #8]	; (2000015c <main+0x14>)
20000152:	681a      	ldr	r2, [r3, #0]
20000154:	4b02      	ldr	r3, [pc, #8]	; (20000160 <main+0x18>)
20000156:	b2d2      	uxtb	r2, r2
20000158:	701a      	strb	r2, [r3, #0]
2000015a:	e7f9      	b.n	20000150 <main+0x8>
2000015c:	20000164 	andcs	r0, r0, r4, ror #2
20000160:	40020c14 	andmi	r0, r2, r4, lsl ip

20000164 <count>:
20000164:	00000000 	andeq	r0, r0, r0

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	00000094 	muleq	r0, r4, r0
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	00000000 	andeq	r0, r0, r0
  10:	00007c0c 	andeq	r7, r0, ip, lsl #24
  14:	0000d800 	andeq	sp, r0, r0, lsl #16
	...
  24:	00c10200 	sbceq	r0, r1, r0, lsl #4
  28:	32010000 	andcc	r0, r1, #0
  2c:	0000370c 	andeq	r3, r0, ip, lsl #14
  30:	64030500 	strvs	r0, [r3], #-1280	; 0xfffffb00
  34:	03200001 			; <UNDEFINED> instruction: 0x03200001
  38:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
  3c:	c7040074 	smlsdxgt	r4, r4, r0, r0
  40:	01000000 	mrseq	r0, (UNDEF: 0)
  44:	01480658 	cmpeq	r8, r8, asr r6
  48:	001c2000 	andseq	r2, ip, r0
  4c:	9c010000 	stcls	0, cr0, [r1], {-0}
  50:	00000061 	andeq	r0, r0, r1, rrx
  54:	74696205 	strbtvc	r6, [r9], #-517	; 0xfffffdfb
  58:	065a0100 	ldrbeq	r0, [sl], -r0, lsl #2
  5c:	00000037 	andeq	r0, r0, r7, lsr r0
  60:	010b0600 	tsteq	fp, r0, lsl #12
  64:	49010000 	stmdbmi	r1, {}	; <UNPREDICTABLE>
  68:	0000bc06 	andeq	fp, r0, r6, lsl #24
  6c:	00008c20 	andeq	r8, r0, r0, lsr #24
  70:	079c0100 	ldreq	r0, [ip, r0, lsl #2]
  74:	000000cc 	andeq	r0, r0, ip, asr #1
  78:	10063401 	andne	r3, r6, r1, lsl #8
  7c:	ac200000 	stcge	0, cr0, [r0], #-0
  80:	01000000 	mrseq	r0, (UNDEF: 0)
  84:	00b9079c 	umlalseq	r0, r9, ip, r7
  88:	06010000 	streq	r0, [r1], -r0
  8c:	00000006 	andeq	r0, r0, r6
  90:	00000c20 	andeq	r0, r0, r0, lsr #24
  94:	009c0100 	addseq	r0, ip, r0, lsl #2

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	10011117 	andne	r1, r1, r7, lsl r1
  10:	02000017 	andeq	r0, r0, #23
  14:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
  18:	0b3b0b3a 	bleq	ec2d08 <startup-0x1f13d2f8>
  1c:	13490b39 	movtne	r0, #39737	; 0x9b39
  20:	00001802 	andeq	r1, r0, r2, lsl #16
  24:	0b002403 	bleq	9038 <startup-0x1fff6fc8>
  28:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  2c:	04000008 	streq	r0, [r0], #-8
  30:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  34:	0b3a0e03 	bleq	e83848 <startup-0x1f17c7b8>
  38:	0b390b3b 	bleq	e42d2c <startup-0x1f1bd2d4>
  3c:	01111927 	tsteq	r1, r7, lsr #18
  40:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  44:	01194296 			; <UNDEFINED> instruction: 0x01194296
  48:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
  4c:	08030034 	stmdaeq	r3, {r2, r4, r5}
  50:	0b3b0b3a 	bleq	ec2d40 <startup-0x1f13d2c0>
  54:	13490b39 	movtne	r0, #39737	; 0x9b39
  58:	2e060000 	cdpcs	0, 0, cr0, cr6, cr0, {0}
  5c:	03193f00 	tsteq	r9, #0, 30
  60:	3b0b3a0e 	blcc	2ce8a0 <startup-0x1fd31760>
  64:	110b390b 	tstne	fp, fp, lsl #18
  68:	40061201 	andmi	r1, r6, r1, lsl #4
  6c:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
  70:	2e070000 	cdpcs	0, 0, cr0, cr7, cr0, {0}
  74:	03193f00 	tsteq	r9, #0, 30
  78:	3b0b3a0e 	blcc	2ce8b8 <startup-0x1fd31748>
  7c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
  80:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
  84:	97184006 	ldrls	r4, [r8, -r6]
  88:	00001942 	andeq	r1, r0, r2, asr #18
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	00000154 	andeq	r0, r0, r4, asr r1
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	20000164 	andcs	r0, r0, r4, ror #2
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	00000114 	andeq	r0, r0, r4, lsl r1
   4:	00530003 	subseq	r0, r3, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	43010000 	movwmi	r0, #4096	; 0x1000
  1c:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
  20:	2f737265 	svccs	0x00737265
  24:	6b7a6f72 	blvs	1e9bdf4 <startup-0x1e16420c>
  28:	65442f68 	strbvs	r2, [r4, #-3944]	; 0xfffff098
  2c:	6f746b73 	svcvs	0x00746b73
  30:	4f4d2f70 	svcmi	0x004d2f70
  34:	616c2f50 	cmnvs	ip, r0, asr pc
  38:	2d346262 	lfmcs	f6, 4, [r4, #-392]!	; 0xfffffe78
  3c:	696c662f 	stmdbvs	ip!, {r0, r1, r2, r3, r5, r9, sl, sp, lr}^
  40:	6f6c6670 	svcvs	0x006c6670
  44:	72695f70 	rsbvc	r5, r9, #112, 30	; 0x1c0
  48:	63615f71 	cmnvs	r1, #452	; 0x1c4
  4c:	7300006b 	movwvc	r0, #107	; 0x6b
  50:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
  54:	632e7075 			; <UNDEFINED> instruction: 0x632e7075
  58:	00000100 	andeq	r0, r0, r0, lsl #2
  5c:	00160500 	andseq	r0, r6, r0, lsl #10
  60:	00000205 	andeq	r0, r0, r5, lsl #4
  64:	05172000 	ldreq	r2, [r7, #-0]
  68:	21211301 			; <UNDEFINED> instruction: 0x21211301
  6c:	0302212f 	movweq	r2, #8495	; 0x212f
  70:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
  74:	02050017 	andeq	r0, r5, #23
  78:	20000010 	andcs	r0, r0, r0, lsl r0
  7c:	05013303 	streq	r3, [r1, #-771]	; 0xfffffcfd
  80:	05052f0b 	streq	r2, [r5, #-3851]	; 0xfffff0f5
  84:	3c150567 	cfldr32cc	mvfx0, [r5], {103}	; 0x67
  88:	053c0405 	ldreq	r0, [ip, #-1029]!	; 0xfffffbfb
  8c:	08052113 	stmdaeq	r5, {r0, r1, r4, r8, sp}
  90:	03010583 	movweq	r0, #5507	; 0x1583
  94:	0a05580f 	beq	1560d8 <startup-0x1fea9f28>
  98:	05207303 	streq	r7, [r0, #-771]!	; 0xfffffcfd
  9c:	09053c1a 	stmdbeq	r5, {r1, r3, r4, sl, fp, ip, sp}
  a0:	2113053c 	tstcs	r3, ip, lsr r5
  a4:	05830905 	streq	r0, [r3, #2309]	; 0x905
  a8:	3c0b0301 	stccc	3, cr0, [fp], {1}
  ac:	77030a05 	strvc	r0, [r3, -r5, lsl #20]
  b0:	3c1a0520 	cfldr32cc	mvfx0, [sl], {32}
  b4:	053c0905 	ldreq	r0, [ip, #-2309]!	; 0xfffff6fb
  b8:	06052113 			; <UNDEFINED> instruction: 0x06052113
  bc:	3c050583 	cfstr32cc	mvfx0, [r5], {131}	; 0x83
  c0:	052f0405 	streq	r0, [pc, #-1029]!	; fffffcc3 <count+0xdffffb5f>
  c4:	01052014 	tsteq	r5, r4, lsl r0
  c8:	1e030534 	mcrne	5, 0, r0, cr3, cr4, {1}
  cc:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
  d0:	10053001 	andne	r3, r5, r1
  d4:	2f0205ae 	svccs	0x000205ae
  d8:	05201005 	streq	r1, [r0, #-5]!
  dc:	10052f02 	andne	r2, r5, r2, lsl #30
  e0:	31120520 	tstcc	r2, r0, lsr #10
  e4:	920c0583 	andls	r0, ip, #549453824	; 0x20c00000
  e8:	05670d05 	strbeq	r0, [r7, #-3333]!	; 0xfffff2fb
  ec:	0205680e 	andeq	r6, r5, #917504	; 0xe0000
  f0:	20210575 	eorcs	r0, r1, r5, ror r5
  f4:	052f0105 	streq	r0, [pc, #-261]!	; fffffff7 <count+0xdffffe93>
  f8:	05680810 	strbeq	r0, [r8, #-2064]!	; 0xfffff7f0
  fc:	13052f02 	movwne	r2, #24322	; 0x5f02
 100:	01040200 	mrseq	r0, R12_usr
 104:	00030531 	andeq	r0, r3, r1, lsr r5
 108:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
 10c:	02001305 	andeq	r1, r0, #335544320	; 0x14000000
 110:	02200104 	eoreq	r0, r0, #4, 2
 114:	01010007 	tsteq	r1, r7

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	20554e47 	subscs	r4, r5, r7, asr #28
   4:	20393943 	eorscs	r3, r9, r3, asr #18
   8:	2e322e39 	mrccs	14, 1, r2, cr2, cr9, {1}
   c:	30322031 	eorscc	r2, r2, r1, lsr r0
  10:	30313931 	eorscc	r3, r1, r1, lsr r9
  14:	28203532 	stmdacs	r0!, {r1, r4, r5, r8, sl, ip, sp}
  18:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  1c:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  20:	52415b20 	subpl	r5, r1, #32, 22	; 0x8000
  24:	72612f4d 	rsbvc	r2, r1, #308	; 0x134
  28:	2d392d6d 	ldccs	13, cr2, [r9, #-436]!	; 0xfffffe4c
  2c:	6e617262 	cdpvs	2, 6, cr7, cr1, cr2, {3}
  30:	72206863 	eorvc	r6, r0, #6488064	; 0x630000
  34:	73697665 	cmnvc	r9, #105906176	; 0x6500000
  38:	206e6f69 	rsbcs	r6, lr, r9, ror #30
  3c:	35373732 	ldrcc	r3, [r7, #-1842]!	; 0xfffff8ce
  40:	205d3939 	subscs	r3, sp, r9, lsr r9
  44:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
  48:	20626d75 	rsbcs	r6, r2, r5, ror sp
  4c:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
  50:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
  54:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
  58:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
  5c:	616d2d20 	cmnvs	sp, r0, lsr #26
  60:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
  64:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
  68:	206d2d36 	rsbcs	r2, sp, r6, lsr sp
  6c:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
  70:	2d20304f 	stccs	0, cr3, [r0, #-316]!	; 0xfffffec4
  74:	3d647473 	cfstrdcc	mvd7, [r4, #-460]!	; 0xfffffe34
  78:	00393963 	eorseq	r3, r9, r3, ror #18
  7c:	552f3a43 	strpl	r3, [pc, #-2627]!	; fffff641 <count+0xdffff4dd>
  80:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
  84:	7a6f722f 	bvc	1bdc948 <startup-0x1e4236b8>
  88:	442f686b 	strtmi	r6, [pc], #-2155	; 90 <startup-0x1fffff70>
  8c:	746b7365 	strbtvc	r7, [fp], #-869	; 0xfffffc9b
  90:	4d2f706f 	stcmi	0, cr7, [pc, #-444]!	; fffffedc <count+0xdffffd78>
  94:	6c2f504f 	stcvs	0, cr5, [pc], #-316	; ffffff60 <count+0xdffffdfc>
  98:	34626261 	strbtcc	r6, [r2], #-609	; 0xfffffd9f
  9c:	6c662f2d 	stclvs	15, cr2, [r6], #-180	; 0xffffff4c
  a0:	6c667069 	stclvs	0, cr7, [r6], #-420	; 0xfffffe5c
  a4:	695f706f 	ldmdbvs	pc, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
  a8:	615f7172 	cmpvs	pc, r2, ror r1	; <UNPREDICTABLE>
  ac:	732f6b63 			; <UNDEFINED> instruction: 0x732f6b63
  b0:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
  b4:	632e7075 			; <UNDEFINED> instruction: 0x632e7075
  b8:	61747300 	cmnvs	r4, r0, lsl #6
  bc:	70757472 	rsbsvc	r7, r5, r2, ror r4
  c0:	756f6300 	strbvc	r6, [pc, #-768]!	; fffffdc8 <count+0xdffffc64>
  c4:	6d00746e 	cfstrsvs	mvf7, [r0, #-440]	; 0xfffffe48
  c8:	006e6961 	rsbeq	r6, lr, r1, ror #18
  cc:	5f717269 	svcpl	0x00717269
  d0:	646e6168 	strbtvs	r6, [lr], #-360	; 0xfffffe98
  d4:	0072656c 	rsbseq	r6, r2, ip, ror #10
  d8:	555c3a43 	ldrbpl	r3, [ip, #-2627]	; 0xfffff5bd
  dc:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
  e0:	7a6f725c 	bvc	1bdca58 <startup-0x1e4235a8>
  e4:	445c686b 	ldrbmi	r6, [ip], #-2155	; 0xfffff795
  e8:	746b7365 	strbtvc	r7, [fp], #-869	; 0xfffffc9b
  ec:	4d5c706f 	ldclmi	0, cr7, [ip, #-444]	; 0xfffffe44
  f0:	6c5c504f 	mrrcvs	0, 4, r5, ip, cr15
  f4:	34626261 	strbtcc	r6, [r2], #-609	; 0xfffffd9f
  f8:	6c665c2d 	stclvs	12, cr5, [r6], #-180	; 0xffffff4c
  fc:	6c667069 	stclvs	0, cr7, [r6], #-420	; 0xfffffe5c
 100:	695f706f 	ldmdbvs	pc, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
 104:	615f7172 	cmpvs	pc, r2, ror r1	; <UNPREDICTABLE>
 108:	61006b63 	tstvs	r0, r3, ror #22
 10c:	695f7070 	ldmdbvs	pc, {r4, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
 110:	0074696e 	rsbseq	r6, r4, lr, ror #18

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d39 	eorscc	r2, r2, r9, lsr sp
  30:	712d3931 			; <UNDEFINED> instruction: 0x712d3931
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3920 	eorcc	r3, lr, #32, 18	; 0x80000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	31393130 	teqcc	r9, r0, lsr r1
  48:	20353230 	eorscs	r3, r5, r0, lsr r2
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	612f4d52 			; <UNDEFINED> instruction: 0x612f4d52
  5c:	392d6d72 	pushcc	{r1, r4, r5, r6, r8, sl, fp, sp, lr}
  60:	6172622d 	cmnvs	r2, sp, lsr #4
  64:	2068636e 	rsbcs	r6, r8, lr, ror #6
  68:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  6c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  70:	37373220 	ldrcc	r3, [r7, -r0, lsr #4]!
  74:	5d393935 			; <UNDEFINED> instruction: 0x5d393935
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	000000ac 	andeq	r0, r0, ip, lsr #1
  30:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  34:	41018e02 	tstmi	r1, r2, lsl #28
  38:	0000070d 	andeq	r0, r0, sp, lsl #14
  3c:	00000018 	andeq	r0, r0, r8, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	200000bc 	strhcs	r0, [r0], -ip
  48:	0000008c 	andeq	r0, r0, ip, lsl #1
  4c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  50:	41018e02 	tstmi	r1, r2, lsl #28
  54:	0000070d 	andeq	r0, r0, sp, lsl #14
  58:	00000018 	andeq	r0, r0, r8, lsl r0
  5c:	00000000 	andeq	r0, r0, r0
  60:	20000148 	andcs	r0, r0, r8, asr #2
  64:	0000001c 	andeq	r0, r0, ip, lsl r0
  68:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  6c:	41018e02 	tstmi	r1, r2, lsl #28
  70:	0000070d 	andeq	r0, r0, sp, lsl #14
